%div{:style => "width: 100%;"}
  #map{:style => "width: 100%; height: 100%;height:100vh;"}
=render "restaurant_info"
:coffeescript
  mapStyle = 
    [
      {
        'featureType': 'administrative.country'
        'elementType': 'geometry.stroke'
        'stylers': [
          { 'lightness': '40' }
          { 'visibility': 'on' }
        ]
      }
      {
        'featureType': 'administrative.country'
        'elementType': 'labels'
        'stylers': [
          { 'visibility': 'simplified' }
          { 'lightness': '20' }
        ]
      }
      {
        'featureType': 'administrative.province'
        'elementType': 'geometry.stroke'
        'stylers': [ { 'visibility': 'off' } ]
      }
      {
        'featureType': 'administrative.province'
        'elementType': 'labels'
        'stylers': [
          { 'visibility': 'simplified' }
          { 'lightness': '10' }
        ]
      }
      {
        'featureType': 'administrative.locality'
        'elementType': 'geometry.stroke'
        'stylers': [ { 'visibility': 'on' } ]
      }
      {
        'featureType': 'administrative.locality'
        'elementType': 'labels'
        'stylers': [
          { 'visibility': 'simplified' }
          { 'lightness': '25' }
        ]
      }
      {
        'featureType': 'landscape'
        'elementType': 'all'
        'stylers': [
          { 'hue': '#ffbb00' }
          { 'saturation': 43.400000000000006 }
          { 'lightness': 37.599999999999994 }
          { 'gamma': 1 }
        ]
      }
      {
        'featureType': 'poi'
        'elementType': 'all'
        'stylers': [
          { 'hue': '#00FF6A' }
          { 'saturation': -1.0989010989011234 }
          { 'lightness': 11.200000000000017 }
          { 'gamma': 1 }
        ]
      }
      {
        'featureType': 'road'
        'elementType': 'geometry'
        'stylers': [
          { 'visibility': 'on' }
          { 'lightness': '30' }
        ]
      }
      {
        'featureType': 'road.highway'
        'elementType': 'all'
        'stylers': [
          { 'hue': '#FFC200' }
          { 'saturation': -61.8 }
          { 'lightness': 45.599999999999994 }
          { 'gamma': 1 }
        ]
      }
      {
        'featureType': 'road.arterial'
        'elementType': 'all'
        'stylers': [
          { 'hue': '#FF0300' }
          { 'saturation': -100 }
          { 'lightness': 51.19999999999999 }
          { 'gamma': 1 }
        ]
      }
      {
        'featureType': 'road.local'
        'elementType': 'all'
        'stylers': [
          { 'hue': '#FF0300' }
          { 'saturation': -100 }
          { 'lightness': 52 }
          { 'gamma': 1 }
        ]
      }
      {
        'featureType': 'water'
        'elementType': 'all'
        'stylers': [
          { 'hue': '#00ffda' }
          { 'saturation': '-50' }
          { 'lightness': '25' }
          { 'gamma': 1 }
        ]
      }
      {
        'featureType': 'water'
        'elementType': 'labels'
        'stylers': [
          { 'visibility': 'off' }
          { 'lightness': '30' }
        ]
      }
    ]
  handler = Gmaps.build('Google')
  handler.buildMap {
    provider: {styles:mapStyle}
    internal: id: 'map'
    markers: { clusterer: null}
  }, ->
    markers = #{raw @hash.to_json}
    Gmaps.store = {}
    Gmaps.store.markers = markers.map((m) ->
      marker = handler.addMarker(m, animation: google.maps.Animation.DROP)
      marker.serviceObject.set 'id', m.id
    
      google.maps.event.addListener marker.serviceObject, 'click', ->
        marker = this
        console.log 'Tite for this marker is:' + @title
        Gmaps.bounceMarker(m.id)
        Gmaps.selectMarker(m.id)
      marker
    )

    handler.bounds.extendWith Gmaps.store.markers
    handler.fitMapToBounds()

    Gmaps.bounceMarker = (id) ->
      $.each Gmaps.store.markers, ->
        if @serviceObject.id == id
          #@panTo()
          @serviceObject.setAnimation 4
        else
          @serviceObject.setAnimation null
    
    Gmaps.selectMarker = (id) ->
      $.ajax
        dataType: 'text'
        url: '/pages/data.json'
        type: 'GET'
        data: restaurant:
          id: id
        success: (json) ->
          result = $.parseJSON(json)
          $(".restaurant-name").html(result["name"])
          $(".restaurant-description").html(result["description"])
          $(".restaurant-address").html(result["address"])
          console.log(result["images"].length)
          if result["images"].length < 1
            $(".restaurant-images").html("")
            $(".no-restaurant").show()
            $(".image-1").hide()
          else
            $(".image-1").show()
            $(".image-1").attr('href', result["images"][0]["url"])
            $(".no-restaurant").hide()
            $(".restaurant-images").html("")
            for c, i in result["images"]
              if i != 0
                $(".restaurant-images").append("<div class='col-xs-12 col-sm-6 restaurant-image'><a href="+c.url+" class='fancybox' rel='gallery'><img src="+c.url+" class='img-responsive'></div>")






      $('#restaurantModal').modal('show')
